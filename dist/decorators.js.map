{"version":3,"sources":["decorators.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;UAUgB;UASA;;;;;AAfT,MAAM,oCAAc,QAAd;AACN,MAAM,kCAAa,QAAb;;;;;AAKN,WAAS,MAAT,GAA4B;sCAAR;;KAAQ;;AACjC,WAAO,UAAU,MAAV,EAAmB;AACxB,gCAAS,MAAT,CAAiB,WAAjB,EAA8B,KAA9B,EAAqC,MAArC,EADwB;KAAnB,CAD0B;GAA5B;;;;;AASA,WAAS,KAAT,GAA2B;uCAAR;;KAAQ;;AAChC,WAAO,UAAU,MAAV,EAAmB;AACxB,gCAAS,MAAT,CAAiB,UAAjB,EAA6B,KAA7B,EAAoC,MAApC,EADwB;KAAnB,CADyB;GAA3B","file":"decorators.js","sourcesContent":["import {metadata} from \"aurelia-metadata\";\n\n// symbols for tracking metadata\n/* global Symbol */\nexport const beforeTypes = Symbol();\nexport const afterTypes = Symbol();\n\n/**\n* A decorator that indicates types that should come before\n*/\nexport function before( ...types ) {\n  return function( target ) {\n    metadata.define( beforeTypes, types, target );\n  };\n}\n\n/**\n* A decorator that indicates that a type follows another type\n*/\nexport function after( ...types ) {\n  return function( target ) {\n    metadata.define( afterTypes, types, target );\n  };\n}\n"],"sourceRoot":"/source/"}